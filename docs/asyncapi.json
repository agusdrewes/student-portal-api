{
  "asyncapi": "2.6.0",
  "info": {
    "title": "Student Portal Events API",
    "version": "1.0.0",
    "description": "AsyncAPI spec for events related to the Student Portal API."
  },
  "channels": {
    
    "core.commission.updated": {
      "subscribe": {
        "summary": "Commission updated in core system",
        "message": {
          "name": "CommissionUpdated",
          "payload": {
            "$ref": "#/components/schemas/Commission"
          }
        }
      }
    },
    "core.exam.updated": {
      "subscribe": {
        "summary": "Exam updated in core system",
        "message": {
          "name": "ExamUpdated",
          "payload": {
            "type": "object",
            "properties": {
              "examId": { "type": "string" },
              "courseId": { "type": "string" },
              "date": { "type": "string", "format": "date-time" },
              "commissionId": { "type": "string" }
            },
            "required": ["examId", "courseId", "date"]
          }
        }
      }
    },
    "core.event.updated": {
      "subscribe": {
        "summary": "Event updated in core system",
        "message": {
          "name": "EventUpdated",
          "payload": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "startDateTime": { "type": "string", "format": "date-time" },
              "endDateTime": { "type": "string", "format": "date-time" },
              "eventType": {
                "type": "string",
                "enum": ["cafeteria", "exam", "extracurricular"]
              },
              "title": { "type": "string" },
              "description": { "type": "string" }
            },
            "required": [
              "id",
              "startDateTime",
              "endDateTime",
              "eventType",
              "title",
              "description"
            ]
          }
        }
      }
    },
    "core.purchase.updated": {
      "subscribe": {
        "summary": "Purchase updated in core system",
        "message": {
          "name": "PurchaseUpdated",
          "payload": {
            "$ref": "#/components/schemas/Purchase"
          }
        }
      }
    },
    
    "courses.commission.enrollment.updated": {
      "publish": {
        "summary": "A user enrolled in or withdrew from a commission",
        "message": {
          "name": "CommissionEnrollmentUpdated",
          "payload": {
            "type": "object",
            "properties": {
              "userId": { "type": "string" },
              "courseId": { "type": "string" },
              "commissionId": { "type": "string" },
              "date": { "type": "string", "format": "date-time" },
              "action": {
                "type": "string",
                "enum": ["enrolled", "withdrew"],
                "description": "Indicates if the student is enrolling or withdrawing"
              }
            },
            "required": ["userId", "courseId", "commissionId", "date", "action"]
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Commission": {
        "type": "object",
        "properties": {
          "days": { "type": "string" },
          "semester": {
            "type": "string",
            "enum": ["1C", "2C"]
          },
          "year": { "type": "string" },
          "startTime": { "type": "string", "format": "time" },
          "endTime": { "type": "string", "format": "time" },
          "shift": {
            "type": "string",
            "enum": ["morning", "afternoon", "night"]
          },
          "professorName": { "type": "string" },
          "availableSpots": { "type": "integer" },
          "mode": { "type": "string", "enum": ["virtual", "in person"] }
        },
        "required": [
          "days",
          "startTime",
          "endTime",
          "shift",
          "professorName",
          "availableSpots",
          "mode",
          "semester",
          "year"
        ]
      },
      "Purchase": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "productCode": { "type": "string" },
              "subtotal": { "type": "string" },
              "quantity": { "type": "integer" }
            },
            "required": [
              "name",
              "description",
              "productCode",
              "subtotal",
              "quantity"
            ]
          },
          "date": { "type": "string", "format": "date-time" },
          "total": { "type": "string" }
        },
        "required": ["product", "date", "total"]
      }
    }
  }
}
